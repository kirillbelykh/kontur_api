from typing import Optional
import win32com.client
import pythoncom

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
CAPICOM_CURRENT_USER_STORE = 2
CAPICOM_MY_STORE = "My"
CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED = 2

def find_certificate_thumbprint() -> Optional[str]:
    """
    –ù–∞—Ö–æ–¥–∏—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç thumbprint –ø–µ—Ä–≤–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç None, –µ—Å–ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.
    """
    pythoncom.CoInitialize()
    
    try:
        store = win32com.client.Dispatch("CAdESCOM.Store")
        store.Open(CAPICOM_CURRENT_USER_STORE, CAPICOM_MY_STORE, CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED)
        
        thumbprint = None
        
        for cert in store.Certificates:
            try:
                # –ü–æ–ª—É—á–∞–µ–º thumbprint
                current_thumbprint = getattr(cert, "Thumbprint", None)
                if current_thumbprint:
                    thumbprint = current_thumbprint.lower()
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç: {thumbprint}")
                    break  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π
                    
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: {e}")
                continue
        
        store.Close()
        
        if not thumbprint:
            print("‚ùå –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ")
        
        return thumbprint
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ö—Ä–∞–Ω–∏–ª–∏—â—É —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: {e}")
        return None
    finally:
        try:
            pythoncom.CoUninitialize()
        except:
            pass

# –ë–æ–ª–µ–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –≤–µ—Ä—Å–∏—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
def find_certificate_thumbprint_detailed() -> Optional[str]:
    """
    –ù–∞—Ö–æ–¥–∏—Ç thumbprint —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ.
    """
    pythoncom.CoInitialize()
    
    try:
        store = win32com.client.Dispatch("CAdESCOM.Store")
        store.Open(CAPICOM_CURRENT_USER_STORE, CAPICOM_MY_STORE, CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED)
        
        certificate_count = 0
        thumbprint = None
        certificate_info = {}
        
        for cert in store.Certificates:
            certificate_count += 1
            try:
                current_thumbprint = getattr(cert, "Thumbprint", None)
                subject = getattr(cert, "SubjectName", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                issuer = getattr(cert, "IssuerName", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
                valid_to = getattr(cert, "ValidToDate", None)
                
                if current_thumbprint:
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–≤–æ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ
                    if not thumbprint:
                        thumbprint = current_thumbprint
                        certificate_info = {
                            'thumbprint': current_thumbprint.lower(),
                            'subject': subject,
                            'issuer': issuer,
                            'valid_to': valid_to
                        }
                    
                    print(f"–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç {certificate_count}:")
                    print(f"  –í–ª–∞–¥–µ–ª–µ—Ü: {subject}")
                    print(f"  Thumbprint: {current_thumbprint.lower()}")
                    
            except Exception as e:
                print(f"  –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ {certificate_count}: {e}")
                continue
        
        store.Close()
        
        # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        print(f"\nüìä –ò–¢–û–ì–ò –ü–û–ò–°–ö–ê:")
        print(f"   –í—Å–µ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: {certificate_count}")
        
        if thumbprint:
            print(f"‚úÖ –ò–°–ü–û–õ–¨–ó–£–ï–ú –°–ï–†–¢–ò–§–ò–ö–ê–¢:")
            print(f"   Thumbprint: {certificate_info['thumbprint']}")
            print(f"   –í–ª–∞–¥–µ–ª–µ—Ü: {certificate_info['subject']}")
            print(f"   –ò–∑–¥–∞—Ç–µ–ª—å: {certificate_info['issuer']}")
            print(f"   –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {certificate_info['valid_to']}")
        else:
            print("‚ùå –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        
        return thumbprint
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return None
    finally:
        try:
            pythoncom.CoUninitialize()
        except:
            pass

# –ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–∞—Ö
def get_thumbprint() -> Optional[str]:
    """
    –ü—Ä–æ—Å—Ç–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è thumbprint. 
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ.
    """
    try:
        pythoncom.CoInitialize()
        store = win32com.client.Dispatch("CAdESCOM.Store")
        store.Open(CAPICOM_CURRENT_USER_STORE, CAPICOM_MY_STORE, CAPICOM_STORE_OPEN_MAXIMUM_ALLOWED)
        
        for cert in store.Certificates:
            thumbprint = getattr(cert, "Thumbprint", None)
            if thumbprint:
                store.Close()
                pythoncom.CoUninitialize()
                return thumbprint.lower()
                
        store.Close()
        return None
        
    except Exception:
        return None
    finally:
        try:
            pythoncom.CoUninitialize()
        except:
            pass

if __name__ == '__main__':
    # –ü—Ä–æ—Å—Ç–æ–π –≤—ã–∑–æ–≤
    print("=== –ü–†–û–°–¢–û–ô –ü–û–ò–°–ö ===")
    thumbprint = find_certificate_thumbprint()
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {thumbprint.lower()}")
    
    print("\n" + "="*50 + "\n")
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤
    print("=== –î–ï–¢–ê–õ–¨–ù–´–ô –ü–û–ò–°–ö ===")
    thumbprint_detailed = find_certificate_thumbprint_detailed()
    print(f"–ò—Ç–æ–≥–æ–≤—ã–π thumbprint: {thumbprint_detailed.lower()}")
    
    print("\n" + "="*50 + "\n")
    
    # –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –ø—Ä–æ–µ–∫—Ç–µ
    print("=== –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø –í –ü–†–û–ï–ö–¢–ï ===")
    thumb = get_thumbprint()
    print(f"Thumbprint –¥–ª—è .env: {thumb.lower()}")